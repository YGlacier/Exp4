cmake_minimum_required (VERSION 2.8)
project(dqn)

option(CPU_ONLY "Use CPU only for Caffe" OFF)
option(USE_CUDNN "Use cuDNN for Caffe" OFF)
option(USE_SDL "Use SDL for ALE" ON)
option(DEBUG "Debug mode" OFF)

include_directories(.)
include_directories(~/caffe/include)
include_directories(~/ale_0.4.4/ale_0_4/src)
link_directories(~/caffe/build/lib)
link_directories(~/ale_0.4.4/ale_0_4)
if(USE_CUDNN)
  link_directories(~/cudnn-6.5-linux-R1)
endif()

add_executable(dqn main.cpp)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++1y -Wfatal-errors")
if (DEBUG)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O0 -g")
else()
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -march=native")
endif()

find_package(Boost REQUIRED COMPONENTS system filesystem)
target_link_libraries(dqn ${Boost_LIBRARIES})

target_link_libraries(dqn caffe)
target_link_libraries(dqn glog)
target_link_libraries(dqn gflags)
target_link_libraries(dqn ale)
target_link_libraries(dqn protobuf)

if(APPLE)
  include_directories(/System/Library/Frameworks/vecLib.framework/Versions/Current/Headers)
endif()

if(USE_SDL)
  find_package(SDL REQUIRED)
  find_package(SDL_image REQUIRED)
  set_target_properties(dqn PROPERTIES COMPILE_DEFINITIONS __USE_SDL)
  target_link_libraries(dqn ${SDL_LIBRARY} ${SDL_IMAGE_LIBRARIES})
  if(APPLE)
    target_link_libraries(dqn sdl_gfx)
  else()
    target_link_libraries(dqn SDL_gfx)
  endif()
endif()

if(NOT CPU_ONLY)
  include_directories(/usr/local/cuda-7.0/targets/x86_64-linux/include)
endif()

if(CPU_ONLY)
  add_definitions(-DCPU_ONLY)
endif()

if(USE_CUDNN)
  target_link_libraries(dqn cudnn)
endif()

# Building tests
add_subdirectory(gtest)
enable_testing()
include_directories(gtest)
link_directories(${CMAKE_CURRENT_SOURCE_DIR}/gtest)
add_executable(runtest dqn_test.cpp replay_memory_test.cpp util/container_test.cpp search_test.cpp)
target_link_libraries(runtest caffe)
target_link_libraries(runtest glog)
target_link_libraries(runtest gflags)
target_link_libraries(runtest protobuf)
target_link_libraries(runtest gtest gtest_main)
add_test(NAME runtest COMMAND ./runtest)
